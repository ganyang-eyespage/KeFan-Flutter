def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.tc.kefan_flutter"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }

    signingConfigs {
        release {
            storeFile file(rootProject.ext.signs.storeFile)
            storePassword rootProject.ext.signs.storePassword
            keyAlias rootProject.ext.signs.keyAlias
            keyPassword rootProject.ext.signs.keyPassword
        }
    }

    buildTypes {
        debug {
            //版本名后缀
            versionNameSuffix "-debug"
            // 是否混淆
            minifyEnabled false
            // zipAlign优化
            zipAlignEnabled true
            // 是否可以debug
            debuggable true

            jniDebuggable true
            // 移除无用的resource文件
            shrinkResources false
            // 混淆配置文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        profile {
            initWith debug
        }
        release {
            signingConfig signingConfigs.release
            // 是否混淆
            minifyEnabled true
//            multiDexKeepProguard 'multidex-config.pro'
            // zipAlign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            // 混淆配置文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                abiFilters "arm64-v8a", "armeabi-v7a"
            }
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "KeFan-Flutter_${defaultConfig.versionName}_${variant.buildType.name}_${releaseTime()}.apk"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
}

//获取编译时间
static def releaseTime() {
    return new Date().format("yyyy-MM-dd_HH-mm", TimeZone.getTimeZone("GMT+8"))
}

